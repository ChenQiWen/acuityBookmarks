#!/usr/bin/env sh

echo "� pre-commit: 智能代码质量增强自动修复..."

# 获取暂存的文件列表
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo "⚠️  没有暂存的文件需要处理"
    exit 0
fi

echo "📄 检测到 $(echo "$STAGED_FILES" | wc -l | tr -d ' ') 个暂存文件"

# 错误收集数组
ERRORS=""

# 1. 自动格式化 (format) - 静默执行
echo "🎨 自动格式化代码..."
if bun run format > /dev/null 2>&1; then
    echo "✅ 代码格式化完成"
else
    ERRORS="${ERRORS}❌ Prettier 格式化失败\n"
fi

# 2. 增强样式修复 (stylelint:fix:enhanced) - 静默执行
STYLE_FILES=$(echo "$STAGED_FILES" | grep -E '\.(vue|css|scss)$' || true)
if [ -n "$STYLE_FILES" ]; then
    echo "💅 增强样式自动修复..."
    # 尝试增强修复，失败则降级到普通修复
    if cd frontend && bun run stylelint:fix:enhanced > /dev/null 2>&1; then
        echo "✅ 增强样式修复完成"
    elif bun run stylelint:fix > /dev/null 2>&1; then
        echo "✅ 基础样式修复完成"
    else
        echo "⚠️  样式自动修复失败，进行详细检查..."
        # 获取详细错误信息
        STYLELINT_ERROR=$(bun run stylelint 2>&1 || true)
        ERRORS="${ERRORS}❌ Stylelint 检查失败:\n${STYLELINT_ERROR}\n\n"
    fi
    cd ..
else
    echo "ℹ️  无样式文件需要检查"
fi

# 3. 增强代码质量修复 (lint:fix:enhanced) - 静默执行
LINT_FILES=$(echo "$STAGED_FILES" | grep -E '\.(js|ts|vue)$' || true)
if [ -n "$LINT_FILES" ]; then
    echo "🔍 增强代码质量自动修复..."
    # 尝试增强修复，失败则降级到普通修复
    if bun run lint:fix:enhanced > /dev/null 2>&1; then
        echo "✅ 增强代码质量修复完成"
    elif bun run lint:fix > /dev/null 2>&1; then
        echo "✅ 基础代码质量修复完成"
    else
        echo "⚠️  代码质量自动修复失败，进行详细检查..."
        # 获取详细错误信息
        ESLINT_ERROR=$(bun run lint:all 2>&1 || true)
        ERRORS="${ERRORS}❌ ESLint 检查失败:\n${ESLINT_ERROR}\n\n"
    fi
else
    echo "ℹ️  无代码文件需要检查"
fi

# 4. 重新添加所有修复后的文件到暂存区
echo "📝 添加修复后的文件到暂存区..."
git add -A

# 5. 如果有无法自动修复的错误，显示详细信息并阻止提交
if [ -n "$ERRORS" ]; then
    echo ""
    echo "🚨 ==================================================="
    echo "🚨 自动修复失败！发现以下无法自动修复的问题："
    echo "🚨 ==================================================="
    echo ""
    printf "$ERRORS"
    echo "💡 请手动修复以上问题后重新提交。这些问题通常涉及："
    echo "   • 代码设计和架构决策"
    echo "   • 潜在的安全漏洞"
    echo "   • 复杂的逻辑错误"
    echo ""
    echo "🛠️  可用的修复命令："
    echo "   bun run lint:fix:enhanced    # 增强 ESLint 自动修复"
    echo "   bun run stylelint:fix:enhanced # 增强样式自动修复"
    echo "   bun scripts/enhance-autofix.js # 全面代码质量增强"
    echo "   bun run format              # 格式化代码"
    echo ""
    exit 1
fi

echo "🎉 所有代码已通过增强自动修复并暂存，可以安全提交！"