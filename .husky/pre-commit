#!/usr/bin/env sh

echo "🔧 pre-commit: 自动格式化与代码质量检查..."

# 获取暂存的文件列表
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo "⚠️  没有暂存的文件需要处理"
    exit 0
fi

echo "📄 检测到 $(echo "$STAGED_FILES" | wc -l | tr -d ' ') 个暂存文件"

# 1. 运行 Prettier 格式化 (format)
echo "🎨 步骤 1/3: 运行 Prettier 格式化..."
if ! bun run format; then
    echo "❌ Prettier 格式化失败"
    exit 1
fi
echo "✅ Prettier 格式化完成"

# 2. 运行 Stylelint 自动修复 (stylelint:fix)
echo "💅 步骤 2/3: 运行 Stylelint 自动修复..."
STYLE_FILES=$(echo "$STAGED_FILES" | grep -E '\.(vue|css|scss)$' || true)
if [ -n "$STYLE_FILES" ]; then
    if ! bun run stylelint:fix; then
        echo "❌ Stylelint 修复失败"
        exit 1
    fi
    echo "✅ Stylelint 修复完成"
else
    echo "ℹ️  没有样式文件需要 Stylelint 检查"
fi

# 3. 运行 ESLint 自动修复 (lint:fix)
echo "🔍 步骤 3/3: 运行 ESLint 自动修复..."
LINT_FILES=$(echo "$STAGED_FILES" | grep -E '\.(js|ts|vue)$' || true)
if [ -n "$LINT_FILES" ]; then
    if ! bun run lint:fix; then
        echo "❌ ESLint 修复失败"
        exit 1
    fi
    echo "✅ ESLint 修复完成"
else
    echo "ℹ️  没有 JS/TS/Vue 文件需要 ESLint 检查"
fi

# 4. 重新添加修复后的文件到暂存区
echo "📝 重新添加修复后的文件到暂存区..."
echo "$STAGED_FILES" | xargs git add

echo "🎉 所有代码质量检查完成，可以安全提交！"