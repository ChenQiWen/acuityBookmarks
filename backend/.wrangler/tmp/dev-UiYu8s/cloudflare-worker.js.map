{
  "version": 3,
  "sources": ["../../../cloudflare-worker.js", "../../../../../../../.bun/install/global/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../.bun/install/global/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-mQpgQQ/middleware-insertion-facade.js", "../../../../../../../.bun/install/global/node_modules/wrangler/templates/middleware/common.ts", "../bundle-mQpgQQ/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/cqw/Documents/github/acuityBookmarks/backend/.wrangler/tmp/dev-UiYu8s",
  "sourcesContent": ["// \u63D0\u53D6\u5E38\u91CF\u4EE5\u6D88\u9664 magic numbers \u5E76\u964D\u4F4E\u590D\u6742\u5EA6\nconst DEFAULT_MODEL = '@cf/meta/llama-3.1-8b-instruct';\nconst DEFAULT_EMBEDDING_MODEL = '@cf/baai/bge-m3';\nconst DEFAULT_TEMPERATURE = 0.6;\nconst DEFAULT_MAX_TOKENS = 256;\nconst BILLION = 1e9;\nconst CRAWL_TIMEOUT_MS = 8000;\nconst HTML_SLICE_LIMIT = 16384;\nconst STATUS_UNSUPPORTED_MEDIA_TYPE = 415;\nconst UA = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36';\nconst ACCEPT_HTML = 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8';\n\nconst corsHeaders = {\n  'access-control-allow-origin': '*',\n  'access-control-allow-methods': 'GET,POST,OPTIONS',\n  'access-control-allow-headers': 'content-type'\n};\n\nconst okJson = (data) => new Response(JSON.stringify(data), { headers: { 'content-type': 'application/json', ...corsHeaders } });\nconst errorJson = (data, status = 500) => new Response(JSON.stringify(data), { status, headers: { 'content-type': 'application/json', ...corsHeaders } });\n\nfunction handleOptions() { return new Response(null, { headers: corsHeaders }); }\n\nfunction handleHealth() {\n  return okJson({ status: 'ok', runtime: 'cloudflare-worker', timestamp: new Date().toISOString() });\n}\n\nasync function handleAIComplete(request, env) {\n  try {\n    const url = new URL(request.url);\n    const body = request.method === 'POST' ? await request.json().catch(() => ({})) : {};\n    const prompt = url.searchParams.get('prompt') || body.prompt || '';\n    const messages = body.messages || undefined;\n    const stream = body.stream === true || url.searchParams.get('stream') === 'true';\n    const model = body.model || url.searchParams.get('model') || DEFAULT_MODEL;\n    const temperature = body.temperature ?? DEFAULT_TEMPERATURE;\n    const max_tokens = body.max_tokens ?? DEFAULT_MAX_TOKENS;\n\n    if (!prompt && !Array.isArray(messages)) return errorJson({ error: 'missing prompt or messages' }, 400);\n\n    const params = Array.isArray(messages) && messages.length > 0\n      ? { messages, stream, temperature, max_tokens }\n      : { prompt, stream, temperature, max_tokens };\n\n    const answer = await env.AI.run(model, params);\n    if (stream) return new Response(answer, { headers: { 'content-type': 'text/event-stream', ...corsHeaders } });\n    return okJson(answer);\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleAIEmbedding(request, env) {\n  try {\n    const url = new URL(request.url);\n    const body = request.method === 'POST' ? await request.json().catch(() => ({})) : {};\n    const text = url.searchParams.get('text') || body.text || '';\n    const model = body.model || url.searchParams.get('model') || DEFAULT_EMBEDDING_MODEL;\n    if (!text) return errorJson({ error: 'missing text' }, 400);\n\n    const answer = await env.AI.run(model, { text });\n    return okJson(answer);\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\n// === Vectorize \u96C6\u6210\uFF1A\u5411\u91CF upsert / \u67E5\u8BE2 ===\nasync function handleVectorizeUpsert(request, env) {\n  try {\n    if (request.method !== 'POST') return errorJson({ error: 'Method not allowed' }, 405);\n    const body = await request.json().catch(() => ({}));\n    const vectors = Array.isArray(body?.vectors) ? body.vectors : [];\n    if (!vectors.length) return errorJson({ error: 'missing vectors' }, 400);\n\n    // \u89C4\u8303\u5316\u8F93\u5165\n    const normalized = vectors.map(v => ({\n      id: String(v.id),\n      values: Array.isArray(v.values) ? v.values : (Array.isArray(v.vector) ? v.vector : []),\n      metadata: v.metadata || {}\n    })).filter(v => Array.isArray(v.values) && v.values.length > 0 && v.id);\n\n    if (!normalized.length) return errorJson({ error: 'no valid vectors' }, 400);\n\n    const result = await env.VECTORIZE.upsert(normalized);\n    return okJson({ success: true, mutation: result?.mutation || result });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleVectorizeQuery(request, env) {\n  try {\n    const url = new URL(request.url);\n    const body = request.method === 'POST' ? await request.json().catch(() => ({})) : {};\n    const text = url.searchParams.get('text') || body.text || '';\n    const vector = Array.isArray(body.vector) ? body.vector : undefined;\n    const topK = Number(url.searchParams.get('topK') || body.topK || 10);\n    const returnMetadata = body.returnMetadata || url.searchParams.get('returnMetadata') || 'indexed';\n    const returnValues = body.returnValues === true || url.searchParams.get('returnValues') === 'true';\n\n    let queryVector = vector;\n    if (!queryVector) {\n      if (!text) return errorJson({ error: 'missing text or vector' }, 400);\n      const emb = await env.AI.run(DEFAULT_EMBEDDING_MODEL, { text });\n      // Cloudflare \u6709\u65F6\u8FD4\u56DE { embeddings: [...] }\n      queryVector = Array.isArray(emb?.embeddings) ? emb.embeddings : emb;\n    }\n\n    if (!Array.isArray(queryVector) || queryVector.length === 0) {\n      return errorJson({ error: 'embedding generation failed' }, 500);\n    }\n\n    const matches = await env.VECTORIZE.query(queryVector, {\n      topK,\n      returnMetadata,\n      returnValues\n    });\n\n    return okJson({ success: true, matches });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleCrawl(request) {\n  try {\n    const url = new URL(request.url);\n    let targetUrl = url.searchParams.get('url') || '';\n    if (!targetUrl && request.method === 'POST') {\n      const body = await request.json().catch(() => ({}));\n      targetUrl = body.url || '';\n    }\n    if (!targetUrl) return errorJson({ error: 'missing url' }, 400);\n\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), CRAWL_TIMEOUT_MS);\n    const resp = await fetch(targetUrl, { signal: controller.signal, headers: { 'User-Agent': UA, 'Accept': ACCEPT_HTML }, redirect: 'follow' });\n    clearTimeout(timeoutId);\n\n    if (!resp.ok) return errorJson({ error: `HTTP ${resp.status}` }, resp.status);\n    const contentType = resp.headers.get('content-type') || '';\n    if (!contentType.includes('text/html')) return errorJson({ error: `Not HTML: ${contentType}` }, STATUS_UNSUPPORTED_MEDIA_TYPE);\n\n    const html = await resp.text();\n    const limited = html.slice(0, HTML_SLICE_LIMIT);\n    const titleMatch = limited.match(/<title[^>]*>([^<]*)<\\/title>/i);\n    const getMeta = (attr, value) => {\n      const re = new RegExp(`<meta[^>]*${attr}=[\"']${value}[\"'][^>]*content=[\"']([^\"]*)[\"'][^>]*>`, 'i');\n      const m = limited.match(re);\n      return m?.[1]?.trim() || '';\n    };\n\n    return okJson({\n      status: resp.status,\n      finalUrl: resp.url,\n      title: titleMatch?.[1]?.trim() || '',\n      description: getMeta('name', 'description').substring(0, 500),\n      keywords: getMeta('name', 'keywords').substring(0, 300),\n      ogTitle: getMeta('property', 'og:title'),\n      ogDescription: getMeta('property', 'og:description').substring(0, 500),\n      ogImage: getMeta('property', 'og:image'),\n      ogSiteName: getMeta('property', 'og:site_name')\n    });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\n// \u5DF2\u79FB\u9664\uFF1A\u670D\u52A1\u7AEF\u968F\u673A\u8BA1\u7B97\u6D4B\u8BD5\u76F8\u5173\u903B\u8F91\n\nexport default {\n  fetch(request, env, _ctx) {\n    if (request.method === 'OPTIONS') return handleOptions();\n    const url = new URL(request.url);\n    if (url.pathname === '/api/health' || url.pathname === '/health') return handleHealth();\n    if (url.pathname === '/api/ai/complete') return handleAIComplete(request, env);\n    if (url.pathname === '/api/ai/embedding') return handleAIEmbedding(request, env);\n    if (url.pathname === '/api/vectorize/upsert') return handleVectorizeUpsert(request, env);\n    if (url.pathname === '/api/vectorize/query') return handleVectorizeQuery(request, env);\n    if (url.pathname === '/api/crawl') return handleCrawl(request);\n    return new Response('Not Found', { status: 404, headers: corsHeaders });\n  }\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/cqw/Documents/github/acuityBookmarks/backend/cloudflare-worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/cqw/.bun/install/global/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/cqw/.bun/install/global/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/cqw/Documents/github/acuityBookmarks/backend/cloudflare-worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/cqw/Documents/github/acuityBookmarks/backend/.wrangler/tmp/bundle-mQpgQQ/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/cqw/.bun/install/global/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/cqw/Documents/github/acuityBookmarks/backend/.wrangler/tmp/bundle-mQpgQQ/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/cqw/Documents/github/acuityBookmarks/backend/.wrangler/tmp/bundle-mQpgQQ/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
