{
  "version": 3,
  "sources": ["wrangler-modules-watch:wrangler:modules-watch", "../../../../../../../.bun/install/global/node_modules/wrangler/templates/modules-watch-stub.js", "../../../utils/logger.js", "../../../utils/d1.js", "../bundle-zxSxhC/middleware-loader.entry.ts", "../bundle-zxSxhC/middleware-insertion-facade.js", "../../../cloudflare-worker.js", "../../../../../../../.bun/install/global/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../.bun/install/global/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../../../../.bun/install/global/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/cqw/Documents/github/acuityBookmarks/backend/.wrangler/tmp/dev-1fvZrI",
  "sourcesContent": ["", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "/**\n * \u8F7B\u91CF\u540E\u7AEF\u65E5\u5FD7\u5DE5\u5177\uFF08Bun/Node \u7EC8\u7AEF\u53CB\u597D\uFF09\n * \u63D0\u4F9B info/warn/error/debug \u56DB\u4E2A\u7EA7\u522B\uFF0C\u7EDF\u4E00\u4F5C\u7528\u57DF\u6807\u7B7E\u683C\u5F0F\u3002\n */\n\nconst LEVEL_ORDER = { debug: 0, info: 1, warn: 2, error: 3, silent: 4 };\nconst DEFAULT_LEVEL = process.env.LOG_LEVEL || (process.env.NODE_ENV === 'development' ? 'debug' : 'info');\nlet CURRENT_LEVEL = DEFAULT_LEVEL;\n\nfunction shouldLog(level) {\n  return LEVEL_ORDER[level] >= LEVEL_ORDER[CURRENT_LEVEL];\n}\n\nfunction format(scope, level, args) {\n  // \u4F7F\u7528\u7EC8\u7AEF\u53CB\u597D\u683C\u5F0F\uFF0C\u4E0D\u4F9D\u8D56 CSS \u6837\u5F0F\n  return [`[${scope}]`, ...args];\n}\n\nexport const logger = {\n  setLevel(level) {\n    if (level in LEVEL_ORDER) CURRENT_LEVEL = level;\n  },\n\n  info(scope, ...args) {\n    if (!shouldLog('info')) return;\n    console.info(...format(scope, 'info', args));\n  },\n  warn(scope, ...args) {\n    if (!shouldLog('warn')) return;\n    console.warn(...format(scope, 'warn', args));\n  },\n  error(scope, ...args) {\n    if (!shouldLog('error')) return;\n    console.error(...format(scope, 'error', args));\n  },\n  debug(scope, ...args) {\n    if (!shouldLog('debug')) return;\n    (console.debug || console.log)(...format(scope, 'debug', args));\n  }\n};\n\nexport default logger;\n", "/**\n * Lightweight D1 helpers (optional). Worker will run without DB binding; all methods no-op when env.DB is absent.\n */\nimport logger from './logger.js';\n\nexport function hasD1(env) {\n  return !!env && !!env.DB && typeof env.DB.prepare === 'function';\n}\n\nexport async function exec(env, sql, params = []) {\n  if (!hasD1(env)) return { changes: 0 };\n  const stmt = env.DB.prepare(sql);\n  const bound = params && params.length ? stmt.bind(...params) : stmt;\n  const info = await bound.run();\n  return info;\n}\n\nexport async function queryOne(env, sql, params = []) {\n  if (!hasD1(env)) return null;\n  const stmt = env.DB.prepare(sql);\n  const bound = params && params.length ? stmt.bind(...params) : stmt;\n  const row = await bound.first();\n  return row || null;\n}\n\nexport async function ensureSchema(env) {\n  if (!hasD1(env)) return false;\n  // Ensure FK enforcement\n  await exec(env, 'PRAGMA foreign_keys = ON;');\n  await exec(env, 'CREATE TABLE IF NOT EXISTS users (\\n\\\n    id TEXT PRIMARY KEY,\\n\\\n    email TEXT UNIQUE,\\n\\\n    provider TEXT,\\n\\\n    provider_id TEXT,\\n\\\n    password_hash TEXT,\\n\\\n    password_salt TEXT,\\n\\\n    password_algo TEXT,\\n\\\n    password_iter INTEGER,\\n\\\n    email_verified INTEGER DEFAULT 0,\\n\\\n    failed_attempts INTEGER DEFAULT 0,\\n\\\n    locked_until INTEGER DEFAULT 0,\\n\\\n    last_login_at INTEGER,\\n\\\n    last_login_ip TEXT,\\n\\\n    created_at INTEGER,\\n\\\n    updated_at INTEGER\\n\\\n  );');\n  await exec(env, 'CREATE UNIQUE INDEX IF NOT EXISTS idx_users_provider ON users(provider, provider_id);');\n  await exec(env, 'CREATE INDEX IF NOT EXISTS idx_users_email ON users(email)');\n  await exec(env, `CREATE TABLE IF NOT EXISTS entitlements (\n    user_id TEXT PRIMARY KEY,\n    tier TEXT NOT NULL,\n    features TEXT,\n    expires_at INTEGER,\n    updated_at INTEGER\n  );`);\n  await migrateEntitlementsFk(env);\n\n  // Refresh tokens table (store hashes, not raw tokens)\n  await exec(env, `CREATE TABLE IF NOT EXISTS refresh_tokens (\n    id TEXT PRIMARY KEY,               -- jti\n    user_id TEXT NOT NULL,\n    token_hash TEXT NOT NULL,          -- sha256(base64url) of refresh token\n    created_at INTEGER NOT NULL,\n    expires_at INTEGER NOT NULL,\n    revoked_at INTEGER,\n    rotated_from TEXT,\n    FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE\n  );`);\n  await exec(env, 'CREATE INDEX IF NOT EXISTS idx_refresh_user ON refresh_tokens(user_id)');\n  await exec(env, 'CREATE INDEX IF NOT EXISTS idx_refresh_hash ON refresh_tokens(token_hash)');\n\n  // Password resets (single-use tokens)\n  await exec(env, `CREATE TABLE IF NOT EXISTS password_resets (\n    token TEXT PRIMARY KEY,            -- secure random base64url\n    user_id TEXT NOT NULL,\n    created_at INTEGER NOT NULL,\n    expires_at INTEGER NOT NULL,\n    used_at INTEGER,\n    requester_ip TEXT,\n    FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE\n  );`);\n  return true;\n}\n\n/* eslint-disable-next-line complexity */\nasync function migrateEntitlementsFk(env) {\n  // \u6700\u4F73\u52AA\u529B\u6DFB\u52A0\u5916\u952E\uFF08\u5982\u8868\u65E0 FK\uFF0C\u5219\u91CD\u5EFA\u4E3A\u5E26 FK \u7684\u7248\u672C\uFF09\u5E76\u52A0\u56FA\uFF1A\u53EF\u89C2\u5BDF\u3001\u4E8B\u52A1\u5316\u3001\u5E76\u53D1\u4FDD\u62A4\u4E0E\u6570\u636E\u5B89\u5168\n  try {\n    await exec(env, 'CREATE TABLE IF NOT EXISTS migration_versions (name TEXT PRIMARY KEY, applied_at INTEGER NOT NULL)');\n    const row = await queryOne(env, 'SELECT sql FROM sqlite_master WHERE type=\\'table\\' AND name=\\'entitlements\\'');\n    const hasFK = row && typeof row.sql === 'string' && row.sql.toUpperCase().includes('FOREIGN KEY');\n    if (hasFK) return; // \u5DF2\u5305\u542B\u5916\u952E\uFF0C\u65E0\u9700\u8FC1\u79FB\n    await exec(env, 'BEGIN IMMEDIATE'); // \u7B80\u6613\u5E76\u53D1\u4FDD\u62A4\n    try {\n      const rowTx = await queryOne(env, 'SELECT sql FROM sqlite_master WHERE type=\\'table\\' AND name=\\'entitlements\\'');\n      const hasFKTx = rowTx && typeof rowTx.sql === 'string' && rowTx.sql.toUpperCase().includes('FOREIGN KEY');\n      if (hasFKTx) { await exec(env, 'COMMIT'); return; }\n      await exec(env, `CREATE TABLE IF NOT EXISTS entitlements__new (\n        user_id TEXT PRIMARY KEY,\n        tier TEXT NOT NULL,\n        features TEXT,\n        expires_at INTEGER,\n        updated_at INTEGER,\n        FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE\n      );`);\n\n      await exec(env, `CREATE TABLE IF NOT EXISTS entitlements_orphans (\n        user_id TEXT,\n        tier TEXT NOT NULL,\n        features TEXT,\n        expires_at INTEGER,\n        updated_at INTEGER,\n        reason TEXT,\n        migrated_at INTEGER\n      );`);\n\n      const orphanCountRow = await queryOne(env, 'SELECT COUNT(*) as cnt FROM entitlements WHERE user_id NOT IN (SELECT id FROM users)');\n      const orphanCount = Number(orphanCountRow?.cnt || 0);\n      if (orphanCount > 0) {\n        logger.warn('D1.migration', `Found ${orphanCount} orphan entitlements; moving to entitlements_orphans`);\n        await exec(env, `INSERT INTO entitlements_orphans(user_id, tier, features, expires_at, updated_at, reason, migrated_at)\n          SELECT e.user_id, e.tier, e.features, e.expires_at, e.updated_at, 'missing user', CAST(STRFTIME('%s','now') AS INTEGER)*1000\n          FROM entitlements e WHERE e.user_id NOT IN (SELECT id FROM users)`);\n      }\n\n      await exec(env, `INSERT INTO entitlements__new(user_id, tier, features, expires_at, updated_at)\n        SELECT e.user_id, e.tier, e.features, e.expires_at, e.updated_at\n        FROM entitlements e WHERE e.user_id IN (SELECT id FROM users)`);\n\n      await exec(env, 'DROP TABLE entitlements');\n      await exec(env, 'ALTER TABLE entitlements__new RENAME TO entitlements');\n      await exec(env, 'INSERT OR REPLACE INTO migration_versions(name, applied_at) VALUES(?, ?)', ['entitlements_fk_v1', Date.now()]);\n      await exec(env, 'COMMIT');\n    } catch (mErr) {\n      logger.error('D1.migration', 'entitlements FK migration failed:', mErr);\n      try { await exec(env, 'ROLLBACK'); } catch (_rbErr) { /* ignore rollback error */ }\n      throw mErr;\n    }\n  } catch (e) {\n    logger.error('D1.ensureSchema', 'migration error:', e);\n    throw e;\n  }\n}\n\nexport function getUserByProvider(env, provider, providerId) {\n  return queryOne(env, 'SELECT * FROM users WHERE provider = ? AND provider_id = ?', [provider, providerId]);\n}\n\nexport function getUserByEmail(env, email) {\n  return queryOne(env, 'SELECT * FROM users WHERE LOWER(email) = LOWER(?)', [email]);\n}\n\nexport function getUserById(env, userId) {\n  return queryOne(env, 'SELECT * FROM users WHERE id = ?', [userId]);\n}\n\nexport async function upsertUser(env, user) {\n  if (!hasD1(env)) return { id: user.id };\n  const now = Date.now();\n  const providerMode = validateProviderInput(user);\n  // \u5982\u679C\u63D0\u4F9B\u4E86 provider \u7EC4\u5408\u952E\uFF0C\u5219\u4F18\u5148\u4F7F\u7528\u5176\u53BB\u91CD\uFF1B\u5426\u5219\u9000\u56DE id \u51B2\u7A81\n  if (providerMode === 'pair') {\n    await exec(env, `INSERT INTO users(id, email, provider, provider_id, created_at, updated_at)\n      VALUES(?, ?, ?, ?, ?, ?)\n      ON CONFLICT(provider, provider_id) DO UPDATE SET email=excluded.email, updated_at=excluded.updated_at`,\n    [user.id, user.email || null, user.provider || null, user.providerId || null, now, now]);\n  } else {\n    await exec(env, `INSERT INTO users(id, email, provider, provider_id, created_at, updated_at)\n      VALUES(?, ?, ?, ?, ?, ?)\n      ON CONFLICT(id) DO UPDATE SET email=excluded.email, updated_at=excluded.updated_at`,\n    [user.id, user.email || null, user.provider || null, user.providerId || null, now, now]);\n  }\n  return { id: user.id };\n}\n\nfunction validateProviderInput(user) {\n  const hasProvider = user.provider !== null && user.provider !== undefined;\n  const hasProviderId = user.providerId !== null && user.providerId !== undefined;\n  if (hasProvider && hasProviderId) return 'pair';\n  if (!hasProvider && !hasProviderId) return 'none';\n  throw new Error('upsertUser: both provider and providerId must be provided together or omitted');\n}\n\nexport async function upsertEntitlements(env, userId, tier = 'free', features = {}, expiresAt = 0) {\n  if (!hasD1(env)) return { userId, tier };\n  const now = Date.now();\n  await exec(env, `INSERT INTO entitlements(user_id, tier, features, expires_at, updated_at)\n    VALUES(?, ?, ?, ?, ?)\n    ON CONFLICT(user_id) DO UPDATE SET tier=excluded.tier, features=excluded.features, expires_at=excluded.expires_at, updated_at=excluded.updated_at`,\n  [userId, tier, JSON.stringify(features || {}), expiresAt, now]);\n  return { userId, tier };\n}\n\n// ========== First-party auth helpers ==========\nexport async function createUserWithPassword(env, { id, email, hash, salt, algo, iter }) {\n  if (!hasD1(env)) return { id };\n  const now = Date.now();\n  await exec(env, 'INSERT INTO users(id, email, password_hash, password_salt, password_algo, password_iter, created_at, updated_at)\\n\\\n    VALUES(?, ?, ?, ?, ?, ?, ?, ?)\\n\\\n    ON CONFLICT(email) DO UPDATE SET password_hash=excluded.password_hash, password_salt=excluded.password_salt, password_algo=excluded.password_algo, password_iter=excluded.password_iter, updated_at=excluded.updated_at',\n  [id, email, hash, salt, algo, iter, now, now]);\n  return { id };\n}\n\nexport async function setPassword(env, userId, { hash, salt, algo, iter }) {\n  if (!hasD1(env)) return { userId };\n  const now = Date.now();\n  await exec(env, 'UPDATE users SET password_hash=?, password_salt=?, password_algo=?, password_iter=?, updated_at=? WHERE id=?',\n    [hash, salt, algo, iter, now, userId]);\n  return { userId };\n}\n\nexport async function recordLoginSuccess(env, userId, ip) {\n  if (!hasD1(env)) return { userId };\n  const now = Date.now();\n  await exec(env, 'UPDATE users SET failed_attempts=0, locked_until=0, last_login_at=?, last_login_ip=?, updated_at=? WHERE id=?',\n    [now, ip || null, now, userId]);\n  return { userId };\n}\n\nexport async function recordLoginFailure(env, userId, lockUntil = 0) {\n  if (!hasD1(env)) return { userId };\n  const now = Date.now();\n  await exec(env, 'UPDATE users SET failed_attempts = failed_attempts + 1, locked_until=?, updated_at=? WHERE id=?',\n    [Number(lockUntil || 0), now, userId]);\n  return { userId };\n}\n\nexport async function insertRefreshToken(env, { jti, userId, tokenHash, expiresAt, rotatedFrom = null }) {\n  if (!hasD1(env)) return { id: jti };\n  const now = Date.now();\n  await exec(env, 'INSERT INTO refresh_tokens(id, user_id, token_hash, created_at, expires_at, rotated_from)\\n\\\n    VALUES(?, ?, ?, ?, ?, ?)',\n  [jti, userId, tokenHash, now, expiresAt, rotatedFrom]);\n  return { id: jti };\n}\n\nexport function findRefreshTokenByHash(env, tokenHash) {\n  if (!hasD1(env)) return null;\n  return queryOne(env, 'SELECT * FROM refresh_tokens WHERE token_hash = ? AND (revoked_at IS NULL)', [tokenHash]);\n}\n\nexport async function revokeRefreshToken(env, jti) {\n  if (!hasD1(env)) return { id: jti };\n  const now = Date.now();\n  await exec(env, 'UPDATE refresh_tokens SET revoked_at=? WHERE id=? AND revoked_at IS NULL', [now, jti]);\n  return { id: jti };\n}\n\nexport async function revokeAllRefreshTokensForUser(env, userId) {\n  if (!hasD1(env)) return { userId };\n  const now = Date.now();\n  await exec(env, 'UPDATE refresh_tokens SET revoked_at=? WHERE user_id=? AND revoked_at IS NULL', [now, userId]);\n  return { userId };\n}\n\nexport async function createPasswordReset(env, { token, userId, expiresAt, ip }) {\n  if (!hasD1(env)) return { token };\n  const now = Date.now();\n  await exec(env, 'INSERT INTO password_resets(token, user_id, created_at, expires_at, requester_ip)\\n\\\n    VALUES(?, ?, ?, ?, ?)',\n  [token, userId, now, expiresAt, ip || null]);\n  return { token };\n}\n\nexport async function consumePasswordReset(env, token) {\n  if (!hasD1(env)) return null;\n  const row = await queryOne(env, 'SELECT * FROM password_resets WHERE token=?', [token]);\n  if (!row) return null;\n  if (row.used_at) return { error: 'used' };\n  const now = Date.now();\n  if (Number(row.expires_at) < now) return { error: 'expired' };\n  await exec(env, 'UPDATE password_resets SET used_at=? WHERE token=? AND used_at IS NULL', [now, token]);\n  return { userId: row.user_id };\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/cqw/Documents/github/acuityBookmarks/backend/.wrangler/tmp/bundle-zxSxhC/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/cqw/.bun/install/global/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/cqw/Documents/github/acuityBookmarks/backend/.wrangler/tmp/bundle-zxSxhC/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/cqw/Documents/github/acuityBookmarks/backend/.wrangler/tmp/bundle-zxSxhC/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/cqw/Documents/github/acuityBookmarks/backend/cloudflare-worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/cqw/.bun/install/global/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/cqw/.bun/install/global/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/cqw/Documents/github/acuityBookmarks/backend/cloudflare-worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "// \u63D0\u53D6\u5E38\u91CF\u4EE5\u6D88\u9664 magic numbers \u5E76\u964D\u4F4E\u590D\u6742\u5EA6\nconst DEFAULT_MODEL = '@cf/meta/llama-3.1-8b-instruct';\nconst DEFAULT_EMBEDDING_MODEL = '@cf/baai/bge-m3';\nconst DEFAULT_TEMPERATURE = 0.6;\nconst DEFAULT_JWT_EXPIRES_IN = 7 * 24 * 60 * 60; // 7 days in seconds\nconst DEFAULT_MAX_TOKENS = 256;\n// First-party auth defaults\nconst PWD_MIN_LEN = 10;\nconst PWD_ITER = 120000; // PBKDF2 iterations\nconst PWD_ALGO = 'pbkdf2-sha256';\nconst ACCESS_TTL = 60 * 60; // 1h\nconst REFRESH_TTL = 30 * 24 * 60 * 60; // 30d\nconst RESET_TTL = 20 * 60; // 20m\nconst DERIVED_KEY_LEN = 32;\nconst SALT_LEN = 16;\nconst EMAIL_MIN_LEN = 6;\nconst LOCK_WINDOW_MS = 10 * 60 * 1000; // 10m\nconst LOCK_FAIL_MAX = 5;\nconst RAND_BYTES_32 = 32;\nconst RAND_BYTES_16 = 16;\nconst HTTP_CONFLICT = 409;\nconst HTTP_LOCKED = 423;\nconst CRAWL_TIMEOUT_MS = 8000;\nconst HTML_SLICE_LIMIT = 16384;\nconst STATUS_UNSUPPORTED_MEDIA_TYPE = 415;\nconst UA = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36';\nconst ACCEPT_HTML = 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8';\n// \u6700\u5C0F\u5D4C\u5165\u6587\u672C\u957F\u5EA6\uFF08\u77ED\u6587\u672C\u76F4\u63A5\u8FD4\u56DE 400 \u6821\u9A8C\u5931\u8D25\uFF09\nconst MIN_EMBED_TEXT_LENGTH = 3;\n// \u5141\u8BB8\u7684\u9ED8\u8BA4\u91CD\u5B9A\u5411\u57DF\uFF08Chrome \u6269\u5C55 WebAuthFlow \u4F7F\u7528 chromiumapp.org \u57DF\u540D\uFF09\nconst DEFAULT_ALLOWED_REDIRECT_HOST_SUFFIXES = ['.chromiumapp.org'];\n\nconst corsHeaders = {\n  'access-control-allow-origin': '*',\n  'access-control-allow-methods': 'GET,POST,OPTIONS',\n  'access-control-allow-headers': 'content-type'\n};\n\nconst okJson = (data) => new Response(JSON.stringify(data), { headers: { 'content-type': 'application/json', ...corsHeaders } });\nconst errorJson = (data, status = 500) => new Response(JSON.stringify(data), { status, headers: { 'content-type': 'application/json', ...corsHeaders } });\n\nfunction handleOptions() { return new Response(null, { headers: corsHeaders }); }\n\nfunction handleHealth() {\n  return okJson({ status: 'ok', runtime: 'cloudflare-worker', timestamp: new Date().toISOString() });\n}\n\n// ===================== Helpers: crypto, encode, email/password =====================\nfunction toBase64Url(bytes) {\n  let bin = '';\n  for (let i = 0; i < bytes.length; i++) bin += String.fromCharCode(bytes[i]);\n  const b64 = (globalThis.btoa)(bin);\n  return b64.replace(/=+$/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nfunction fromUtf8(text) {\n  return new globalThis.TextEncoder().encode(text);\n}\n\nfunction randomBase64Url(n = RAND_BYTES_32) {\n  const arr = new Uint8Array(n);\n  (globalThis.crypto).getRandomValues(arr);\n  return toBase64Url(arr);\n}\n\nasync function pbkdf2Sha256(password, saltBytes, iterations = PWD_ITER, length = 32) {\n  const key = await (globalThis.crypto).subtle.importKey('raw', fromUtf8(password), { name: 'PBKDF2' }, false, ['deriveBits']);\n  const bits = await (globalThis.crypto).subtle.deriveBits({ name: 'PBKDF2', hash: 'SHA-256', salt: saltBytes, iterations }, key, length * 8);\n  return new Uint8Array(bits);\n}\n\nasync function hashPassword(password, saltB64url, iterations = PWD_ITER) {\n  const salt = Uint8Array.from((globalThis.atob)(saltB64url.replace(/-/g, '+').replace(/_/g, '/')), c => c.charCodeAt(0));\n  const derived = await pbkdf2Sha256(password, salt, iterations, DERIVED_KEY_LEN);\n  return toBase64Url(derived);\n}\n\nasync function deriveNewPassword(password, iterations = PWD_ITER) {\n  const salt = new Uint8Array(SALT_LEN);\n  (globalThis.crypto).getRandomValues(salt);\n  const hash = await pbkdf2Sha256(password, salt, iterations, DERIVED_KEY_LEN);\n  return { hash: toBase64Url(hash), salt: toBase64Url(salt), algo: PWD_ALGO, iter: iterations };\n}\n\nasync function sha256Base64Url(input) {\n  const bytes = typeof input === 'string' ? fromUtf8(input) : input;\n  const digest = await (globalThis.crypto).subtle.digest('SHA-256', bytes);\n  return toBase64Url(new Uint8Array(digest));\n}\n\nfunction validateEmail(email) {\n  const e = String(email || '').trim();\n  return e.length >= EMAIL_MIN_LEN && e.includes('@');\n}\n\nfunction validatePasswordStrength(pw) {\n  const s = String(pw || '');\n  if (s.length < PWD_MIN_LEN) return false;\n  const hasLower = /[a-z]/.test(s);\n  const hasUpper = /[A-Z]/.test(s);\n  const hasDigit = /\\d/.test(s);\n  const hasSym = /[^A-Za-z0-9]/.test(s);\n  let score = 0; if (hasLower) score++; if (hasUpper) score++; if (hasDigit) score++; if (hasSym) score++;\n  return score >= 3;\n}\n\nfunction getIp(request) {\n  return request.headers.get('cf-connecting-ip') || request.headers.get('x-forwarded-for') || '';\n}\n\nasync function handleAIComplete(request, env) {\n  try {\n    const url = new URL(request.url);\n    const body = request.method === 'POST' ? await request.json().catch(() => ({})) : {};\n    const prompt = url.searchParams.get('prompt') || body.prompt || '';\n    const messages = body.messages || undefined;\n    const stream = body.stream === true || url.searchParams.get('stream') === 'true';\n    const model = body.model || url.searchParams.get('model') || DEFAULT_MODEL;\n    const temperature = body.temperature ?? DEFAULT_TEMPERATURE;\n    const max_tokens = body.max_tokens ?? DEFAULT_MAX_TOKENS;\n\n    if (!prompt && !Array.isArray(messages)) return errorJson({ error: 'missing prompt or messages' }, 400);\n\n    const params = Array.isArray(messages) && messages.length > 0\n      ? { messages, stream, temperature, max_tokens }\n      : { prompt, stream, temperature, max_tokens };\n\n    const answer = await env.AI.run(model, params);\n    if (stream) return new Response(answer, { headers: { 'content-type': 'text/event-stream', ...corsHeaders } });\n    return okJson(answer);\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleAIEmbedding(request, env) {\n  try {\n    const url = new URL(request.url);\n    const body = request.method === 'POST' ? await request.json().catch(() => ({})) : {};\n    const text = url.searchParams.get('text') || body.text || '';\n    const model = body.model || url.searchParams.get('model') || DEFAULT_EMBEDDING_MODEL;\n    if (!text) return errorJson({ error: 'missing text' }, 400);\n    const trimmed = text.trim();\n    if (trimmed.length < MIN_EMBED_TEXT_LENGTH) {\n      return errorJson({\n        error: 'text too short',\n        details: { minTextLength: MIN_EMBED_TEXT_LENGTH, actualLength: trimmed.length }\n      }, 400);\n    }\n\n    const vector = await generateEmbeddingVector(env, model, trimmed);\n\n    if (!Array.isArray(vector) || vector.length === 0) {\n      return errorJson({\n        error: 'embedding generation produced empty vector',\n        details: { model, textLength: trimmed.length }\n      }, 500);\n    }\n    return okJson({ vector, model });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\n// === Vectorize \u96C6\u6210\uFF1A\u5411\u91CF upsert / \u67E5\u8BE2 ===\nasync function handleVectorizeUpsert(request, env) {\n  try {\n    if (request.method !== 'POST') return errorJson({ error: 'Method not allowed' }, 405);\n    const body = await request.json().catch(() => ({}));\n    const vectors = Array.isArray(body?.vectors) ? body.vectors : [];\n    if (!vectors.length) return errorJson({ error: 'missing vectors' }, 400);\n\n    // \u89C4\u8303\u5316\u8F93\u5165\n    const normalized = vectors.map(v => ({\n      id: String(v.id),\n      values: Array.isArray(v.values) ? v.values : (Array.isArray(v.vector) ? v.vector : []),\n      metadata: v.metadata || {}\n    })).filter(v => Array.isArray(v.values) && v.values.length > 0 && v.id);\n\n    if (!normalized.length) return errorJson({ error: 'no valid vectors' }, 400);\n\n    const result = await env.VECTORIZE.upsert(normalized);\n    const attempted = normalized.length;\n    // Cloudflare API \u53EF\u80FD\u4EC5\u8FD4\u56DE mutationId\uFF1B\u5C06\u5C1D\u8BD5\u6570\u4F5C\u4E3A\u53C2\u8003\u8FD4\u56DE\n    return okJson({ success: true, attempted, mutation: result?.mutation || result });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleVectorizeQuery(request, env) {\n  try {\n    const url = new URL(request.url);\n    const body = request.method === 'POST' ? await request.json().catch(() => ({})) : {};\n    const text = url.searchParams.get('text') || body.text || '';\n    const vector = Array.isArray(body.vector) ? body.vector : undefined;\n    const topK = Number(url.searchParams.get('topK') || body.topK || 10);\n    const returnMetadata = body.returnMetadata || url.searchParams.get('returnMetadata') || 'indexed';\n    const returnValues = body.returnValues === true || url.searchParams.get('returnValues') === 'true';\n    const modelOverride = body.model || url.searchParams.get('model') || undefined;\n\n    let queryVector = vector;\n    if (!queryVector) {\n      if (!text) return errorJson({ error: 'missing text or vector' }, 400);\n      const trimmed = text.trim();\n      if (trimmed.length < MIN_EMBED_TEXT_LENGTH) {\n        return errorJson({\n          error: 'text too short for embedding',\n          details: { minTextLength: MIN_EMBED_TEXT_LENGTH, actualLength: trimmed.length }\n        }, 400);\n      }\n      const model = modelOverride || DEFAULT_EMBEDDING_MODEL;\n      try {\n        queryVector = await generateEmbeddingVector(env, model, trimmed);\n      } catch (e) {\n        const msg = e instanceof Error ? e.message : String(e);\n        return errorJson({\n          error: `embedding generation failed: ${msg}`,\n          details: { model, textLength: trimmed.length }\n        }, 500);\n      }\n    }\n\n    if (!Array.isArray(queryVector) || queryVector.length === 0) {\n      return errorJson({\n        error: 'embedding generation produced empty vector',\n        details: { textLength: (text || '').trim().length }\n      }, 500);\n    }\n\n    let matches;\n    try {\n      matches = await env.VECTORIZE.query(queryVector, {\n        topK,\n        returnMetadata,\n        returnValues\n      });\n    } catch (e) {\n      const msg = e instanceof Error ? e.message : String(e);\n      return errorJson({\n        error: `vectorize query failed: ${msg}`,\n        details: { topK, returnMetadata, returnValues }\n      }, 500);\n    }\n\n    return okJson({ success: true, matches });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleCrawl(request) {\n  try {\n    const url = new URL(request.url);\n    let targetUrl = url.searchParams.get('url') || '';\n    if (!targetUrl && request.method === 'POST') {\n      const body = await request.json().catch(() => ({}));\n      targetUrl = body.url || '';\n    }\n    if (!targetUrl) return errorJson({ error: 'missing url' }, 400);\n\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), CRAWL_TIMEOUT_MS);\n    const resp = await fetch(targetUrl, { signal: controller.signal, headers: { 'User-Agent': UA, 'Accept': ACCEPT_HTML }, redirect: 'follow' });\n    clearTimeout(timeoutId);\n\n    if (!resp.ok) return errorJson({ error: `HTTP ${resp.status}` }, resp.status);\n    const contentType = resp.headers.get('content-type') || '';\n    if (!contentType.includes('text/html')) return errorJson({ error: `Not HTML: ${contentType}` }, STATUS_UNSUPPORTED_MEDIA_TYPE);\n\n    const html = await resp.text();\n    const limited = html.slice(0, HTML_SLICE_LIMIT);\n    const titleMatch = limited.match(/<title[^>]*>([^<]*)<\\/title>/i);\n    const getMeta = (attr, value) => {\n      const re = new RegExp(`<meta[^>]*${attr}=[\"']${value}[\"'][^>]*content=[\"']([^\"]*)[\"'][^>]*>`, 'i');\n      const m = limited.match(re);\n      return m?.[1]?.trim() || '';\n    };\n\n    return okJson({\n      status: resp.status,\n      finalUrl: resp.url,\n      title: titleMatch?.[1]?.trim() || '',\n      description: getMeta('name', 'description').substring(0, 500),\n      keywords: getMeta('name', 'keywords').substring(0, 300),\n      ogTitle: getMeta('property', 'og:title'),\n      ogDescription: getMeta('property', 'og:description').substring(0, 500),\n      ogImage: getMeta('property', 'og:image'),\n      ogSiteName: getMeta('property', 'og:site_name')\n    });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\n// \u5DF2\u79FB\u9664\uFF1A\u670D\u52A1\u7AEF\u968F\u673A\u8BA1\u7B97\u6D4B\u8BD5\u76F8\u5173\u903B\u8F91\n\nexport default {\n  fetch(request, env, _ctx) {\n    if (request.method === 'OPTIONS') return handleOptions();\n    const url = new URL(request.url);\n    // Lazy ensure schema if D1 is bound\n    try {\n      import('./utils/d1.js').then((m) => m.ensureSchema?.(env)).catch(() => { /* noop */ });\n    } catch (_e) { /* noop */ }\n    if (url.pathname === '/api/health' || url.pathname === '/health') return handleHealth();\n    // Auth & Account\n    if (url.pathname === '/api/auth/register') return handleRegister(request, env);\n    if (url.pathname === '/api/auth/login') return handlePasswordLogin(request, env);\n    if (url.pathname === '/api/auth/refresh') return handleRefresh(request, env);\n    if (url.pathname === '/api/auth/forgot-password') return handleForgotPassword(request, env);\n    if (url.pathname === '/api/auth/reset-password') return handleResetPassword(request, env);\n    if (url.pathname === '/api/auth/change-password') return handleChangePassword(request, env);\n    if (url.pathname === '/api/auth/start') return handleAuthStart(request, env);\n    if (url.pathname === '/api/auth/callback') return handleAuthCallback(request, env);\n    if (url.pathname === '/auth/dev/authorize') return handleAuthDevAuthorize(request, env);\n    if (url.pathname === '/api/user/me') return handleUserMe(request, env);\n    if (url.pathname === '/api/auth/dev-login') return handleDevLogin(request, env);\n    if (url.pathname === '/api/ai/complete') return handleAIComplete(request, env);\n    if (url.pathname === '/api/ai/embedding') return handleAIEmbedding(request, env);\n    if (url.pathname === '/api/vectorize/upsert') return handleVectorizeUpsert(request, env);\n    if (url.pathname === '/api/vectorize/query') return handleVectorizeQuery(request, env);\n    if (url.pathname === '/api/crawl') return handleCrawl(request);\n    return new Response('Not Found', { status: 404, headers: corsHeaders });\n  }\n};\n\n// ===================== First-party auth handlers =====================\nasync function mustD1(env) {\n  const m = await import('./utils/d1.js');\n  if (!m.hasD1(env)) return { ok: false, mod: m };\n  return { ok: true, mod: m };\n}\n\nfunction signAccess(env, payload, ttlSec = ACCESS_TTL) {\n  const secret = env.JWT_SECRET || env.SECRET || 'dev-secret';\n  return signJWT(secret, payload, ttlSec);\n}\n\nasync function newRefreshForUser(env, mod, userId) {\n  const token = randomBase64Url(RAND_BYTES_32);\n  const tokenHash = await sha256Base64Url(token);\n  const jti = randomBase64Url(RAND_BYTES_16);\n  const expiresAt = Math.floor(Date.now() / 1000) + REFRESH_TTL;\n  await mod.insertRefreshToken(env, { jti, userId, tokenHash, expiresAt });\n  return { token, jti, expiresAt };\n}\n\nasync function handleRegister(request, env) {\n  try {\n    const { ok, mod } = await mustD1(env);\n    if (!ok) return errorJson({ error: 'database not configured' }, 501);\n    const body = await request.json().catch(() => ({}));\n    const email = String(body.email || '').trim();\n    const password = String(body.password || '');\n    if (!validateEmail(email)) return errorJson({ error: 'invalid email' }, 400);\n    if (!validatePasswordStrength(password)) return errorJson({ error: 'weak password' }, 400);\n    const existing = await mod.getUserByEmail(env, email);\n    if (existing) return errorJson({ error: 'email already registered' }, HTTP_CONFLICT);\n    const deriv = await deriveNewPassword(password, PWD_ITER);\n    const userId = `local:${email.toLowerCase()}`;\n    await mod.createUserWithPassword(env, { id: userId, email, hash: deriv.hash, salt: deriv.salt, algo: deriv.algo, iter: deriv.iter });\n    await mod.upsertEntitlements(env, userId, 'free', {}, 0);\n    const access = signAccess(env, { sub: userId, email, tier: 'free', features: {} }, ACCESS_TTL);\n    const ref = await newRefreshForUser(env, mod, userId);\n    return okJson({ success: true, accessToken: access, refreshToken: ref.token, expiresIn: ACCESS_TTL });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handlePasswordLogin(request, env) {\n  try {\n    const { ok, mod } = await mustD1(env);\n    if (!ok) return errorJson({ error: 'database not configured' }, 501);\n    const body = await request.json().catch(() => ({}));\n    const email = String(body.email || '').trim();\n    const password = String(body.password || '');\n    if (!validateEmail(email)) return errorJson({ error: 'invalid email or password' }, 400);\n    const user = await mod.getUserByEmail(env, email);\n    // generic error message\n    if (!user || !user.password_hash || !user.password_salt) return errorJson({ error: 'invalid email or password' }, 400);\n    const now = Date.now();\n    if (Number(user.locked_until || 0) > now) return errorJson({ error: 'account temporarily locked' }, HTTP_LOCKED);\n    const computed = await hashPassword(password, String(user.password_salt), Number(user.password_iter || PWD_ITER));\n    if (computed !== String(user.password_hash)) {\n      const attempts = Number(user.failed_attempts || 0) + 1;\n      const willLock = attempts >= LOCK_FAIL_MAX ? now + LOCK_WINDOW_MS : 0;\n      await mod.recordLoginFailure(env, user.id, willLock);\n      return errorJson({ error: 'invalid email or password' }, 400);\n    }\n    await mod.recordLoginSuccess(env, user.id, getIp(request));\n    const access = signAccess(env, { sub: user.id, email: user.email, tier: 'free', features: {} }, ACCESS_TTL);\n    const ref = await newRefreshForUser(env, mod, user.id);\n    return okJson({ success: true, accessToken: access, refreshToken: ref.token, expiresIn: ACCESS_TTL });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleRefresh(request, env) {\n  try {\n    const { ok, mod } = await mustD1(env);\n    if (!ok) return errorJson({ error: 'database not configured' }, 501);\n    const body = await request.json().catch(() => ({}));\n    const token = String(body.refreshToken || '');\n    if (!token) return errorJson({ error: 'missing refreshToken' }, 400);\n    const tokenHash = await sha256Base64Url(token);\n    const row = await mod.findRefreshTokenByHash(env, tokenHash);\n    if (!row) return errorJson({ error: 'invalid refreshToken' }, 401);\n    const nowSec = Math.floor(Date.now() / 1000);\n    if (Number(row.expires_at || 0) < nowSec) {\n      await mod.revokeRefreshToken(env, row.id);\n      return errorJson({ error: 'expired refreshToken' }, 401);\n    }\n    // rotate\n    await mod.revokeRefreshToken(env, row.id);\n    const fresh = await newRefreshForUser(env, mod, row.user_id);\n    const access = await signAccess(env, { sub: row.user_id }, ACCESS_TTL);\n    return okJson({ success: true, accessToken: access, refreshToken: fresh.token, expiresIn: ACCESS_TTL });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleForgotPassword(request, env) {\n  try {\n    const { ok, mod } = await mustD1(env);\n    if (!ok) return errorJson({ error: 'database not configured' }, 501);\n    const body = await request.json().catch(() => ({}));\n    const email = String(body.email || '').trim();\n    if (!validateEmail(email)) return okJson({ success: true }); // \u4E0D\u66B4\u9732\n    const user = await mod.getUserByEmail(env, email);\n    if (!user) return okJson({ success: true });\n    const token = await randomBase64Url(24);\n    const exp = Date.now() + RESET_TTL * 1000;\n    await mod.createPasswordReset(env, { token, userId: user.id, expiresAt: exp, ip: getIp(request) });\n    // \u90AE\u4EF6\u670D\u52A1\u540E\u7EED\u63A5\u5165\uFF1B\u5F00\u53D1\u9636\u6BB5\u53EF\u5728 dev \u6A21\u5F0F\u8FD4\u56DE token \u4FBF\u4E8E\u9A8C\u8BC1\n    const allowDev = getEnvFlag(env, 'ALLOW_DEV_LOGIN', false);\n    return okJson({ success: true, ...(allowDev ? { token } : {}) });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleResetPassword(request, env) {\n  try {\n    const { ok, mod } = await mustD1(env);\n    if (!ok) return errorJson({ error: 'database not configured' }, 501);\n    const body = await request.json().catch(() => ({}));\n    const token = String(body.token || '');\n    const newPassword = String(body.newPassword || '');\n    if (!token || !validatePasswordStrength(newPassword)) return errorJson({ error: 'invalid token or password' }, 400);\n    const res = await mod.consumePasswordReset(env, token);\n    if (!res || res.error) return errorJson({ error: 'invalid or expired token' }, 400);\n    const deriv = await deriveNewPassword(newPassword, PWD_ITER);\n    await mod.setPassword(env, res.userId, deriv);\n    await mod.revokeAllRefreshTokensForUser(env, res.userId);\n    return okJson({ success: true });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleChangePassword(request, env) {\n  try {\n    const { ok, mod } = await mustD1(env);\n    if (!ok) return errorJson({ error: 'database not configured' }, 501);\n    const token = parseBearer(request);\n    if (!token) return errorJson({ error: 'unauthorized' }, 401);\n    const secret = env.JWT_SECRET || env.SECRET || 'dev-secret';\n    const v = await verifyJWT(secret, token);\n    if (!v.ok) return errorJson({ error: 'unauthorized' }, 401);\n    const body = await request.json().catch(() => ({}));\n    const oldPassword = String(body.oldPassword || '');\n    const newPassword = String(body.newPassword || '');\n    if (!validatePasswordStrength(newPassword)) return errorJson({ error: 'weak password' }, 400);\n    const user = await mod.getUserById(env, v.payload?.sub);\n    if (!user || !user.password_hash || !user.password_salt) return errorJson({ error: 'unauthorized' }, 401);\n    const computed = await hashPassword(oldPassword, String(user.password_salt), Number(user.password_iter || PWD_ITER));\n    if (computed !== String(user.password_hash)) return errorJson({ error: 'invalid old password' }, 400);\n    const deriv = await deriveNewPassword(newPassword, PWD_ITER);\n    await mod.setPassword(env, user.id, deriv);\n    await mod.revokeAllRefreshTokensForUser(env, user.id);\n    return okJson({ success: true });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n// === \u5B89\u5168\u4E0E\u6821\u9A8C\u5DE5\u5177 ===\nfunction getEnvFlag(env, key, defaultBool = false) {\n  const v = env && (env[key] ?? env[key?.toUpperCase?.()] ?? env[key?.toLowerCase?.()]);\n  if (typeof v === 'boolean') return v;\n  if (typeof v === 'string') return ['1', 'true', 'yes', 'on'].includes(v.toLowerCase());\n  return defaultBool;\n}\n\nfunction parseAllowlist(env) {\n  const raw = env && (env.REDIRECT_URI_ALLOWLIST || env.REDIRECT_ALLOWLIST || '');\n  if (!raw) return [];\n  try {\n    if (raw.trim().startsWith('[')) {\n      const arr = JSON.parse(raw);\n      return Array.isArray(arr) ? arr.map(String) : [];\n    }\n  } catch (_e) { /* ignore */ }\n  return String(raw)\n    .split(',')\n    .map(s => s.trim())\n    .filter(Boolean);\n}\n\nfunction isHttpsLikeLocal(u) {\n  return u.protocol === 'http:' && (u.hostname === 'localhost' || u.hostname === '127.0.0.1');\n}\n\nfunction isAllowedRedirectUri(redirectUri, env) {\n  try {\n    const u = new URL(redirectUri);\n    // \u534F\u8BAE\u9650\u5236\uFF1A\u5141\u8BB8 https\u3001chrome-extension\u3002\u5BF9 http \u4EC5\u653E\u884C localhost/127.0.0.1\n    const scheme = u.protocol;\n    if (scheme !== 'https:' && scheme !== 'chrome-extension:' && !isHttpsLikeLocal(u)) {\n      return { ok: false, error: 'unsupported scheme' };\n    }\n    if (scheme === 'https:') {\n      // \u5141\u8BB8 chromiumapp.org\uFF08Chrome WebAuthFlow \u56DE\u8C03\u57DF\uFF09\n      const host = u.hostname.toLowerCase();\n      if (!DEFAULT_ALLOWED_REDIRECT_HOST_SUFFIXES.some(suf => host.endsWith(suf))) {\n        // \u975E chromiumapp.org \u5219\u9700\u8981\u8FDB\u5165 allowlist \u68C0\u67E5\n        const allow = parseAllowlist(env);\n        if (allow.length) {\n          const href = u.toString();\n          const origin = `${u.protocol}//${u.host}`;\n          const ok = allow.some(item => href.startsWith(item) || origin === item || host === item);\n          if (!ok) return { ok: false, error: 'redirect not in allowlist' };\n        }\n      }\n    }\n    // \u989D\u5916\u62D2\u7EDD\u660E\u663E\u5371\u9669\u7684 scheme\n    if (scheme === 'javascript:' || scheme === 'data:') return { ok: false, error: 'dangerous scheme' };\n    return { ok: true };\n  } catch (_e) {\n    return { ok: false, error: 'invalid redirect_uri' };\n  }\n}\n// === Embedding \u89E3\u6790\u52A9\u624B\uFF1A\u7EDF\u4E00\u4ECE\u591A\u79CD\u8FD4\u56DE\u7ED3\u6784\u63D0\u53D6\u5411\u91CF ===\nfunction extractEmbeddingVector(answer) {\n  if (!answer) return undefined;\n  // \u76F4\u63A5\u6570\u7EC4\n  if (Array.isArray(answer)) return answer;\n  // Cloudflare \u6587\u6863\uFF1A{ data: [vector] }\n  if (Array.isArray(answer.data)) {\n    const first = answer.data[0];\n    if (Array.isArray(first)) return first;\n    if (first && Array.isArray(first.embedding)) return first.embedding; // OpenAI\u517C\u5BB9\n    // \u67D0\u4E9B\u8FD4\u56DE\u53EF\u80FD\u76F4\u63A5\u662F data: vector\n    if (typeof answer.data[0] === 'number') return answer.data;\n  }\n  // \u5176\u4ED6\u5B57\u6BB5\uFF1Aembeddings \u6216 embedding\n  if (Array.isArray(answer.embeddings)) {\n    const e0 = answer.embeddings[0];\n    return Array.isArray(e0) ? e0 : answer.embeddings;\n  }\n  if (Array.isArray(answer.embedding)) return answer.embedding;\n  return undefined;\n}\n\nasync function generateEmbeddingVector(env, model, text) {\n  const emb = await env.AI.run(model, { text });\n  return extractEmbeddingVector(emb);\n}\n\n// ===================== Minimal Auth & JWT =====================\nfunction base64urlEncode(data) {\n  const bytes = typeof data === 'string' ? new globalThis.TextEncoder().encode(data) : new Uint8Array(data);\n  let bin = '';\n  for (let i = 0; i < bytes.length; i++) bin += String.fromCharCode(bytes[i]);\n  const b64 = (globalThis.btoa)(bin);\n  return b64.replace(/=+$/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nfunction base64urlFromJSON(obj) {\n  const json = JSON.stringify(obj);\n  return base64urlEncode(new globalThis.TextEncoder().encode(json));\n}\n\nasync function hmacSign(keyBytes, data) {\n  const key = await (globalThis.crypto).subtle.importKey('raw', keyBytes, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign']);\n  const sig = await (globalThis.crypto).subtle.sign('HMAC', key, new globalThis.TextEncoder().encode(data));\n  return new Uint8Array(sig);\n}\n\nasync function signJWT(secret, payload, expiresInSec = DEFAULT_JWT_EXPIRES_IN) {\n  const header = { alg: 'HS256', typ: 'JWT' };\n  const now = Math.floor(Date.now() / 1000);\n  const body = { iat: now, exp: now + Number(expiresInSec || DEFAULT_JWT_EXPIRES_IN), ...payload };\n  const unsigned = `${base64urlFromJSON(header)}.${base64urlFromJSON(body)}`;\n  const sigBytes = await hmacSign(new globalThis.TextEncoder().encode(secret), unsigned);\n  const signature = base64urlEncode(sigBytes);\n  return `${unsigned}.${signature}`;\n}\n\nasync function verifyJWT(secret, token) {\n  try {\n    const parts = String(token || '').split('.');\n    if (parts.length !== 3) return { ok: false, error: 'malformed' };\n    const [p1, p2, sig] = parts;\n    const unsigned = `${p1}.${p2}`;\n    const expected = base64urlEncode(await hmacSign(new globalThis.TextEncoder().encode(secret), unsigned));\n    if (expected !== sig) return { ok: false, error: 'bad-signature' };\n    const payloadJson = (globalThis.atob)(p2.replace(/-/g, '+').replace(/_/g, '/'));\n    const payload = JSON.parse(payloadJson);\n    const now = Math.floor(Date.now() / 1000);\n    if (typeof payload.exp === 'number' && now > payload.exp) return { ok: false, error: 'expired' };\n    return { ok: true, payload };\n  } catch (e) {\n    return { ok: false, error: e instanceof Error ? e.message : String(e) };\n  }\n}\n\nfunction parseBearer(req) {\n  const auth = req.headers.get('authorization') || req.headers.get('Authorization') || '';\n  const m = auth.match(/^Bearer\\s+(.+)$/i);\n  return m ? m[1] : '';\n}\n\nasync function handleUserMe(request, env) {\n  try {\n    const token = parseBearer(request);\n    if (!token) return okJson({ success: true, user: null, tier: 'free', features: {}, expiresAt: 0 });\n    const secret = env.JWT_SECRET || env.SECRET || 'dev-secret';\n    const v = await verifyJWT(secret, token);\n    if (!v.ok) return okJson({ success: true, user: null, tier: 'free', features: {}, expiresAt: 0 });\n    const p = v.payload || {};\n    return okJson({ success: true, user: { id: p.sub || p.userId || 'u', email: p.email || undefined }, tier: p.tier || 'free', features: p.features || {}, expiresAt: p.exp || 0 });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\n// \u5F00\u53D1\u7528\uFF1A\u65E0 OAuth \u4E5F\u80FD\u53D1\u6D4B\u8BD5\u4EE4\u724C\uFF1B\u751F\u4EA7\u9700\u5173\u95ED\u6216\u53D7\u4FDD\u62A4\nasync function handleDevLogin(request, env) {\n  try {\n    // \u73AF\u5883\u95E8\u7981\uFF1A\u5FC5\u987B\u663E\u5F0F\u5141\u8BB8\n    const allowDev = getEnvFlag(env, 'ALLOW_DEV_LOGIN', false);\n    if (!allowDev) return errorJson({ error: 'dev-login disabled' }, 403);\n    const url = new URL(request.url);\n    const tier = (url.searchParams.get('tier') || 'pro').toLowerCase();\n    const email = url.searchParams.get('user') || 'dev@example.com';\n    const expiresIn = Number(url.searchParams.get('expiresIn') || 24 * 60 * 60); // 1 \u5929\n    const secret = env.JWT_SECRET || env.SECRET || 'dev-secret';\n    const token = await signJWT(secret, { sub: `dev:${email}`, email, tier, features: { pro: tier === 'pro' } }, expiresIn);\n    const now = Math.floor(Date.now() / 1000);\n    return okJson({ success: true, token, tier, user: { email }, expiresAt: now + expiresIn });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\n// === OAuth skeleton ===\nfunction handleAuthStart(request, _env) {\n  try {\n    const url = new URL(request.url);\n    const provider = (url.searchParams.get('provider') || 'dev').toLowerCase();\n    const redirectUri = url.searchParams.get('redirect_uri') || '';\n    const codeChallenge = url.searchParams.get('code_challenge') || '';\n    const scope = url.searchParams.get('scope') || '';\n    if (!redirectUri) return errorJson({ error: 'missing redirect_uri' }, 400);\n    const redirCheck = isAllowedRedirectUri(redirectUri, _env);\n    if (!redirCheck.ok) return errorJson({ error: `invalid redirect_uri: ${redirCheck.error}` }, 400);\n    // dev provider: immediately authorize via our worker and bounce back to extension redirect\n    if (provider === 'dev') {\n      const allowDev = getEnvFlag(_env, 'ALLOW_DEV_LOGIN', false);\n      if (!allowDev) return errorJson({ error: 'dev auth disabled' }, 403);\n      const state = url.searchParams.get('state') || Math.random().toString(36).slice(2);\n      const authUrl = new URL('/auth/dev/authorize', url);\n      authUrl.searchParams.set('redirect_uri', redirectUri);\n      authUrl.searchParams.set('state', state);\n      return okJson({ success: true, provider, authUrl: authUrl.toString(), state });\n    }\n    const cfg = getProviderConfig(provider, _env);\n    if (!cfg) return errorJson({ error: `provider not configured: ${provider}` }, 400);\n    const s = url.searchParams.get('state') || Math.random().toString(36).slice(2);\n    const a = new URL(cfg.authUrl);\n    a.searchParams.set('response_type', 'code');\n    a.searchParams.set('client_id', cfg.clientId);\n    a.searchParams.set('redirect_uri', redirectUri);\n    if (codeChallenge) {\n      a.searchParams.set('code_challenge', codeChallenge);\n      a.searchParams.set('code_challenge_method', 'S256');\n    }\n    a.searchParams.set('scope', scope || cfg.scope || '');\n    a.searchParams.set('state', s);\n    if (provider === 'google') {\n      a.searchParams.set('prompt', 'consent');\n      a.searchParams.set('access_type', 'offline');\n    }\n    return okJson({ success: true, provider, authUrl: a.toString(), state: s });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nfunction handleAuthDevAuthorize(request, _env) {\n  try {\n    const url = new URL(request.url);\n    const redirectUri = url.searchParams.get('redirect_uri') || '';\n    const state = url.searchParams.get('state') || '';\n    if (!redirectUri) return errorJson({ error: 'missing redirect_uri' }, 400);\n    const allowDev = getEnvFlag(_env, 'ALLOW_DEV_LOGIN', false);\n    if (!allowDev) return errorJson({ error: 'dev auth disabled' }, 403);\n    const redirCheck = isAllowedRedirectUri(redirectUri, _env);\n    if (!redirCheck.ok) return errorJson({ error: `invalid redirect_uri: ${redirCheck.error}` }, 400);\n    const code = Math.random().toString(36).slice(2);\n    const redirect = new URL(redirectUri);\n    redirect.searchParams.set('code', code);\n    if (state) redirect.searchParams.set('state', state);\n    return new Response(null, { status: 302, headers: { 'Location': redirect.toString(), ...corsHeaders } });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nasync function handleAuthCallback(request, env) {\n  try {\n    const url = new URL(request.url);\n    const provider = (url.searchParams.get('provider') || 'dev').toLowerCase();\n    const code = url.searchParams.get('code') || '';\n    const redirectUri = url.searchParams.get('redirect_uri') || '';\n    const codeVerifier = url.searchParams.get('code_verifier') || '';\n    if (!code) return errorJson({ error: 'missing code' }, 400);\n    // For dev provider, mint a token directly\n    if (provider === 'dev') {\n      const allowDev = getEnvFlag(env, 'ALLOW_DEV_LOGIN', false);\n      if (!allowDev) return errorJson({ error: 'dev auth disabled' }, 403);\n      const email = `user+${code}@example.com`;\n      const tier = 'pro';\n      const secret = env.JWT_SECRET || env.SECRET || 'dev-secret';\n      const token = await signJWT(secret, { sub: `dev:${email}`, email, tier, features: { pro: true } }, 24 * 60 * 60);\n      const now = Math.floor(Date.now() / 1000);\n      return okJson({ success: true, token, tier, user: { email }, expiresAt: now + 24 * 60 * 60 });\n    }\n    // google/github exchange with PKCE\n    const cfg = getProviderConfig(provider, env);\n    if (!cfg) return errorJson({ error: `provider not configured: ${provider}` }, 400);\n    if (!redirectUri) return errorJson({ error: 'missing redirect_uri' }, 400);\n    const redirCheck = isAllowedRedirectUri(redirectUri, env);\n    if (!redirCheck.ok) return errorJson({ error: `invalid redirect_uri: ${redirCheck.error}` }, 400);\n    if (!codeVerifier) return errorJson({ error: 'missing code_verifier' }, 400);\n    const accessToken = await exchangeCodeForToken(cfg, code, redirectUri, codeVerifier);\n    const { email, sub } = await fetchUserInfoWithAccessToken(provider, cfg, accessToken);\n    const userId = `${provider}:${sub || email || Math.random().toString(36).slice(2)}`;\n    const tier = 'free';\n    await persistUserEntitlements(env, userId, email, provider, sub);\n    const secret = env.JWT_SECRET || env.SECRET || 'dev-secret';\n    const token = await signJWT(secret, { sub: userId, email, tier, features: {} }, 7 * 24 * 60 * 60);\n    const now = Math.floor(Date.now() / 1000);\n    return okJson({ success: true, token, tier, user: { id: userId, email }, expiresAt: now + 7 * 24 * 60 * 60 });\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : String(err);\n    return errorJson({ error: msg }, 500);\n  }\n}\n\nfunction getProviderConfig(provider, env) {\n  if (provider === 'google') {\n    const clientId = env.AUTH_GOOGLE_CLIENT_ID;\n    const clientSecret = env.AUTH_GOOGLE_CLIENT_SECRET;\n    const authUrl = env.AUTH_GOOGLE_AUTH_URL || 'https://accounts.google.com/o/oauth2/v2/auth';\n    const tokenUrl = env.AUTH_GOOGLE_TOKEN_URL || 'https://oauth2.googleapis.com/token';\n    const userInfoUrl = env.AUTH_GOOGLE_USERINFO_URL || 'https://openidconnect.googleapis.com/v1/userinfo';\n    if (!clientId) return null;\n    return { provider, clientId, clientSecret, authUrl, tokenUrl, userInfoUrl, scope: 'openid email profile' };\n  }\n  if (provider === 'github') {\n    const clientId = env.AUTH_GITHUB_CLIENT_ID;\n    const clientSecret = env.AUTH_GITHUB_CLIENT_SECRET;\n    const authUrl = env.AUTH_GITHUB_AUTH_URL || 'https://github.com/login/oauth/authorize';\n    const tokenUrl = env.AUTH_GITHUB_TOKEN_URL || 'https://github.com/login/oauth/access_token';\n    const userInfoUrl = env.AUTH_GITHUB_USERINFO_URL || 'https://api.github.com/user';\n    if (!clientId) return null;\n    return { provider, clientId, clientSecret, authUrl, tokenUrl, userInfoUrl, scope: 'read:user user:email' };\n  }\n  return null;\n}\n\nasync function exchangeCodeForToken(cfg, code, redirectUri, codeVerifier) {\n  const form = new globalThis.URLSearchParams();\n  form.set('grant_type', 'authorization_code');\n  form.set('code', code);\n  form.set('redirect_uri', redirectUri);\n  form.set('client_id', cfg.clientId);\n  form.set('code_verifier', codeVerifier);\n  if (cfg.clientSecret) form.set('client_secret', cfg.clientSecret);\n  const tokenResp = await fetch(cfg.tokenUrl, { method: 'POST', headers: { 'content-type': 'application/x-www-form-urlencoded', 'accept': 'application/json' }, body: form.toString() });\n  if (!tokenResp.ok) throw new Error(`token exchange failed ${tokenResp.status}`);\n  const tokenJson = await tokenResp.json().catch(() => ({}));\n  const accessToken = tokenJson.access_token;\n  if (!accessToken) throw new Error('missing access_token');\n  return accessToken;\n}\n\nasync function fetchUserInfoWithAccessToken(provider, cfg, accessToken) {\n  if (provider === 'google') {\n    const uResp = await fetch(cfg.userInfoUrl, { headers: { Authorization: `Bearer ${accessToken}` } });\n    const u = await uResp.json().catch(() => ({}));\n    return { email: String(u.email || ''), sub: String(u.sub || '') };\n  }\n  if (provider === 'github') {\n    const uResp = await fetch(cfg.userInfoUrl, { headers: { Authorization: `Bearer ${accessToken}`, 'accept': 'application/json', 'user-agent': 'AcuityBookmarks' } });\n    const u = await uResp.json().catch(() => ({}));\n    let email = String(u.email || '');\n    const sub = String(u.id || '');\n    if (!email) {\n      try {\n        const eResp = await fetch('https://api.github.com/user/emails', { headers: { Authorization: `Bearer ${accessToken}`, 'accept': 'application/json', 'user-agent': 'AcuityBookmarks' } });\n        const arr = await eResp.json().catch(() => ([]));\n        if (Array.isArray(arr) && arr.length) {\n          const primary = arr.find(x => x && x.primary) || arr[0];\n          if (primary && primary.email) email = String(primary.email);\n        }\n      } catch (_e) { /* noop */ }\n    }\n    return { email, sub };\n  }\n  return { email: '', sub: '' };\n}\n\nasync function persistUserEntitlements(env, userId, email, provider, providerId) {\n  try {\n    const d1 = await import('./utils/d1.js');\n    await d1.upsertUser(env, { id: userId, email, provider, providerId });\n    await d1.upsertEntitlements(env, userId, 'free', {}, 0);\n  } catch (_e) { /* ignore if no DB */ }\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["email", "tier", "secret", "token", "now"]
}
